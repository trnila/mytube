{block content}
<script src="{$basePath}/assets/components/plupload/js/moxie.js"></script>
<script src="{$basePath}/assets/components/plupload/js/plupload.dev.js"></script>

<div class="panel panel-default" id="upload">
	<div class="panel-heading">
		<h3 class="panel-title"><i class="fa fa-upload"></i> Nahrání nového videa</h3>
	</div>
	<div class="panel-body">
		<div class="progress progress-striped active" hidden>
			<div class="progress-bar"></div>
		</div>

		<form n:name="addVideo" class="form" role="form">
			<ul class=error n:if="$form->ownErrors">
				<li n:foreach="$form->ownErrors as $error">{$error}</li>
			</ul>

			<div class="form-group">
				<label n:name="title">{$form['title']->caption}</label>
				<div>
					<input n:name="title" class="form-control" placeholder="{$form['title']->caption}">
				</div>
			</div>

			<div class="form-group">
				<label n:name="description">{$form['description']->caption}</label>
				<div>
					<textarea n:name="description" class="form-control autogrow" placeholder="Popis souboru"></textarea>
				</div>
			</div>

			<div class="form-group">
				<label n:name="tags">{$form['tags']->caption}</label>
				<div>
					<input n:name="tags" type="hidden" style="width: 100%">
				</div>
			</div>

			<span class="btn btn-default" id="upload-choose-file"><i class="fa fa-level-up"></i> Vybrat video nebo hudbu...</span>
			<strong id="upload-filename"></strong>

			<div class="pull-right">
				<button n:name="upload" class="btn btn-primary" disabled><i class="fa fa-upload"></i> Nahrát</button>
			</div>
		</form>
	</div>
</div>

<script>
var container = $("#upload");
var form = container.find('form');
var submitBtn = container.find('button[name=upload]');
var tags = container.find("[name=tags]");
var MIME_TYPE_ERROR = 'mime_type_error';

tags.select2({ tags: []})
	.select2("container").find("ul.select2-choices").sortable({
		containment: 'parent',
		start: function() { $("#e15").select2("onSortStart"); },
		update: function() { $("#e15").select2("onSortEnd"); }
	});


plupload.addFileFilter('mimetypes', function(types, file, cb) {
	for(var i in types) {
		if(file.type.match(types[i])) {
			cb(true);
			return;
		}
	}

	this.trigger('Error', {
		code : MIME_TYPE_ERROR,
		message : plupload.translate('Vybraný soubor není hudba nebo video.'),
		file : file
	});

	cb(false);
});

var uploader = new plupload.Uploader({
	browse_button: 'upload-choose-file',
	url: {link this},
	filters: {
		mimetypes: ["video/", "audio/"]
	},
	headers: {'X-Requested-With': 'XMLHttpRequest'}
});

uploader.init();
uploader.bind('FilesAdded', function(uploader, files) {
	submitBtn.removeAttr('disabled');

	// fill in file name if title is not provided
	if(!form.find('[name=title]').val().length) {
		var filename = files[0].name.split('.');
		filename.pop();

		form.find('[name=title]').val(filename.join('.'));
	}

	$("#upload-filename").text(files[0].name);
});

uploader.bind('BeforeUpload', function(uploader, file) {
	var data = {};
	$.each(form.serializeArray(), function(i, element) {
		data[element.name] = element.value;
	});

	uploader.settings.multipart_params = data;
});

uploader.bind('FileUploaded', function(up, file, info) {
	var json = jQuery.parseJSON(info.response);
	if(json && json['redirect']) {
		document.location.href = json['redirect'];
	} else {
		alert("An error occured, try it again please");
	}
});

uploader.bind('Error', function(up, error) {
	if(error['code'] == MIME_TYPE_ERROR) {
		alert(error['message']);
	} else {
		var additionalMsg = '';
		if(error && error['message']) {
			additionalMsg = ': ' + error['message'];
		}

		alert("An error occured, please try again later" + additionalMsg);
	}
});

uploader.bind('UploadProgress', function(up, file) {
	container.find('.progress').show().find('.progress-bar').css('width', file.percent + '%');
});

form.submit(function(evt) {
	if(!submitBtn.is(':disabled')) {
		uploader.start();
	}

	evt.preventDefault();
});
</script>
